import org.apache.tools.ant.filters.EscapeUnicode

plugins {
	id 'java'
	id 'org.springframework.boot' version '3.3.0'
	id 'io.spring.dependency-management' version '1.1.5'
}

group = 'com.personal'
version = '0.0.1'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.1.0'
	implementation 'org.springframework.boot:spring-boot-starter-logging'

	runtimeOnly 'com.mysql:mysql-connector-j'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'

	//test
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.security:spring-security-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
	testImplementation 'org.assertj:assertj-core:3.24.2'
	testImplementation 'org.apache.httpcomponents.client5:httpclient5:5.2.1'

	// Mockito 의존성
	testImplementation 'org.mockito:mockito-core:4.11.0'  // 최신 버전 확인 후 사용하세요
	testImplementation 'org.mockito:mockito-junit-jupiter:4.11.0'

	//jwt
	implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
	runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.11.5'
	runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.11.5' // JSON parsing

	implementation 'javax.servlet:javax.servlet-api:4.0.1'

	// Lombok 의존성 추가
	compileOnly 'org.projectlombok:lombok:1.18.24'
	annotationProcessor 'org.projectlombok:lombok:1.18.24'
	//kafka
	implementation 'org.springframework.kafka:spring-kafka:3.2.0'
	//redis
	implementation 'org.springframework.boot:spring-boot-starter-data-redis'
	//restapi connection
	implementation 'com.squareup.okhttp3:okhttp:4.12.0'
	//json parsing
	implementation 'com.google.code.gson:gson:2.8.9'

	//websocket
	implementation 'org.springframework.boot:spring-boot-starter-websocket'


}

tasks.withType(JavaCompile).configureEach {
	options.encoding = 'UTF-8'
}

tasks.withType(ProcessResources).configureEach {
	filesMatching("**/*.properties") {
		filter(EscapeUnicode)
	}
	filteringCharset = 'UTF-8'
}


tasks.named('test') {
	useJUnitPlatform()
}
